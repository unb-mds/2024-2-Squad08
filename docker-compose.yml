services:
  backend:
    build: ./backend
    container_name: flask_app
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/monitorabsb
      - POSTGRES_DB=monitorabsb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      - POSTGRES_DB=monitorabsb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  frontend:
    container_name: react_app
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app:delegated
      - frontend_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    networks:
      - app-network
    depends_on:
      - backend
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - rabbitmq_go_net

volumes:
  frontend_node_modules:

networks:
  app-network:
    driver: bridge
  rabbitmq_go_net:
    driver: bridge
